#! /bin/bash

usage() { echo "Usage: $0 [-d] [-n <int>]" 1>&2; exit $1; }
debug=0
num=20
while getopts ":hdn:" opt; do
  case ${opt} in
    h ) usage 0 
      ;;
    d ) debug=1
      ;;
    n ) num=${OPTARG}
      ;;
    *) usage 1
      ;;
  esac
done
shift $((OPTIND -1))

if [ $debug -eq 1 ]; then
	exec 3>&2
	set -x
else
	exec 3>&2 1>/dev/null
fi
if [ -f "bugs_1" ]; then
	echo "Using the already existing bug scraping files" >&3
	s1=0
else
	echo "Running the bug scraping script" >&3
	python3 src/main.py
	s1=$?
fi
if [ $s1 -eq 0 ]; then
	echo "Bug scraping succeeded" >&3
	python3 src/analyse.py
	s2=$?
	if [ $s2 -eq 0 ]; then
		echo "Bug analysis and counting succeeded" >&3
		sort -r -n -k 4 max_bugs_num | head -n$num > max_bugs_num_sorted_selection
		s3=$?
		if [ $s3 -eq 0 ]; then
			echo "Bug sorting and selection succeeded" >&3
			python3 src/get_hashes.py
			s4=$?
			if [ $s4 -eq 0 ]; then
				echo "Project commits' hashes retrieval succedeed" >&3
				python3 src/write_format_for_automation.py 1>&3
				s5=$?
				if [ $s5 -eq 0 ]; then
					echo "Format for automation prepared" >&3

					python3 src/get_testcases.py 1>&3
					s6=$?
					if [ $s6 -eq 0 ]; then
						rm bugs_1*
						rm max_bugs*
						find testcases/ -name "*.txt" | awk '{a=$1; gsub(/\.txt/,""); printf "mv \"%s\" \"%s\"\n", a, $1}' | sh
						echo "Bug retrieval completely successful" >&3
						exit 0
					fi
				fi
			fi
		fi
	fi
fi
echo "An error occurred" >&3

if [ $debug -eq 1 ]; then
	set +x
fi
