Detailed Report:

https://oss-fuzz.com/testcase?key=5677672356642816

Project: cryptofuzz

Fuzzing Engine: libFuzzer

Fuzz Target: cryptofuzz-openssl-noasm

Job Type: libfuzzer_msan_cryptofuzz

Platform Id: linux

Crash Type: Use-of-uninitialized-value

Crash Address:

Crash State:

bool std::__1::equal<std::__1::__wrap_iter<unsigned char const*>, std::__1::__wr

bool std::__1::operator==<unsigned char, std::__1::allocator<unsigned char> >

cryptofuzz::ExecutorBase<cryptofuzz::Buffer, cryptofuzz::operation::CMAC>::compa

Sanitizer: memory (MSAN)

Recommended Security Severity: Medium

Regressed:

https://oss-fuzz.com/revisions?job=libfuzzer_msan_cryptofuzz&range=201910040231:201910170231

Reproducer Testcase:

https://oss-fuzz.com/download?testcase_id=5677672356642816

Issue filed automatically.

See

https://google.github.io/oss-fuzz/advanced-topics/reproducing

for instructions to reproduce this bug locally.

When you fix this bug, please

* mention the fix revision(s).

* state whether the bug was a short-lived regression or an old bug in any stable releases.

* add any other useful information.

This information can help downstream consumers.

If you need to contact the OSS-Fuzz team with a question, concern, or any other feedback, please file an issue at

https://github.com/google/oss-fuzz/issues

.

Comments on individual Monorail issues are not monitored.

This bug is subject to a 90 day disclosure deadline. If 90 days elapse

without an upstream patch, then the bug report will automatically

become visible to the public.

